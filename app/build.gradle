plugins {
    id 'com.android.application'
    id 'kotlin-android'
//    id 'kotlin-android-extensions'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'

    // Apply the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
    // Apply the Performance Monitoring plugin
    id 'com.google.firebase.firebase-perf'

    id 'androidx.navigation.safeargs'

    id 'kotlin-kapt'
    id 'jacoco'
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = "$jacocoVersion"
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

//testOptions {
//    t {
//        jacoco {
//            includeNoLocationClasses = true
//        }
//    }
//    unitTests.returnDefaultValues = true
//}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.cs506.healthily"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
    }
    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }
}

dependencies {
    def nav_version = "2.4.0-alpha02"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.0'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.2'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.2'
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    //For unit tests
    testImplementation 'junit:junit:4.+'
    testImplementation 'org.mockito:mockito-inline:2.27.0'

//For UI tests
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha03'



    //Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Declare the dependency for the Realtime Database library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-database-ktx'
    // Declare the dependency for the Cloud Storage library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-storage-ktx'
    //implementation 'com.google.firebase:firebase-crashlytics-ktx'
    // Declare the dependency for the Performance Monitoring library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-perf-ktx'

    // Navigation Component
//    implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
//    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.6.0"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0-native-mt"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.5'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    // google map dependencies
    implementation 'com.google.android.libraries.places:places:2.4.0'
    implementation 'com.google.maps.android:android-maps-utils:2.2.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.maps:google-maps-services:0.2.9'
    implementation 'org.slf4j:slf4j-simple:1.7.25'

    // Image Cropper
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    // Circular ImageView library
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Glide Library
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    androidTestImplementation 'androidx.test:rules:1.4.0-alpha05'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'


    // Shape library to draw curves
    implementation 'com.github.florent37:shapeofview:1.4.7'

    // Circular Indicator library
    implementation 'com.victor:lib:1.0.4'

    // Biometric
    implementation("androidx.biometric:biometric:1.2.0-alpha03")




    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    def nav_version = "2.3.5"

    //The rest of the dependencies here

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Maps
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.libraries.places:places:2.5.0'
    implementation 'com.android.volley:volley:1.2.1'

    //Firebase
    implementation 'com.google.firebase:firebase-database:19.5.1'

    //Jetbrains
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.31"

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    secrets {
        defaultPropertiesFileName 'local.properties'
        // To add your Maps API key to this project:
        // 1. Open the root project's local.properties file
        // 2. Add this line, where YOUR_API_KEY is your API key:
        //        MAPS_API_KEY=YOUR_API_KEY
    }

    // google fit
    implementation("com.google.android.gms:play-services-fitness:20.0.0")
    implementation("com.google.android.gms:play-services-auth:19.2.0")

    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0'

    // Graphs
    implementation 'com.jjoe64:graphview:4.2.2'
}